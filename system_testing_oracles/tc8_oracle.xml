<?xml version="1.0" encoding="UTF-8"?><infozilla-output>
    <Patches amount="0"/>
    <Stacktraces amount="2">
        <Stacktrace timestamp="0">
            <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
            <Reason>:
                Resource /org.eclipse.debug.core/.classpath is not local.</Reason>
            <Frames>
                <Frame depth="0">org.eclipse.core.internal.resources.Resource.checkLocal(Resource.java:313)</Frame>
                <Frame depth="1">org.eclipse.core.internal.resources.File.getContents(File.java:213)</Frame>
                <Frame depth="2">org.eclipse.jdt.internal.core.Util.getResourceContentsAsByteArray(Util.java:671)</Frame>
                <Frame depth="3">org.eclipse.jdt.internal.core.JavaProject.getSharedProperty(JavaProject.java:1793)</Frame>
                <Frame depth="4">org.eclipse.jdt.internal.core.JavaProject.readClasspathFile(JavaProject.java:2089)</Frame>
                <Frame depth="5">org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:1579)</Frame>
                <Frame depth="6">org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.execute(IndexAllProject.java:77)</Frame>
                <Frame depth="7">org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:371)</Frame>
            </Frames>
        </Stacktrace>
        <Stacktrace timestamp="0">
            <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
            <Reason>:
                Resource /org.eclipse.jdt.launching/.classpath is not local.</Reason>
            <Frames>
                <Frame depth="0">org.eclipse.core.internal.resources.Resource.checkLocal(Resource.java:307)</Frame>
                <Frame depth="1">org.eclipse.core.internal.resources.File.getContents(File.java:213)</Frame>
                <Frame depth="2">org.eclipse.jdt.internal.core.Util.getResourceContentsAsByteArray(Util.java:677)</Frame>
                <Frame depth="3">org.eclipse.jdt.internal.core.JavaProject.getSharedProperty(JavaProject.java:1809)</Frame>
                <Frame depth="4">org.eclipse.jdt.internal.core.JavaProject.readClasspathFile(JavaProject.java:2105)</Frame>
                <Frame depth="5">org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:1593)</Frame>
                <Frame depth="6">org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:1583)</Frame>
                <Frame depth="7">org.eclipse.jdt.internal.core.JavaProject.getOutputLocation(JavaProject.java:1375)</Frame>
                <Frame depth="8">org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.execute(IndexAllProject.java:90)</Frame>
                <Frame depth="9">org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:375)</Frame>
                <Frame depth="10">java.lang.Thread.run(Thread.java:536)</Frame>
            </Frames>
        </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="9">
        <source_code type="ifstatement">
            <location start="4764" end="5032"/>
            <code>if (isJavaProject) {
                /*IJavaProject jProject = JavaCore.create(project);
                if (jProject.getRawClasspath() != null
                &amp;&amp; jProject.getRawClasspath().length &gt; 0)
                jProject.setRawClasspath(new IClasspathEntry[0], monitor);*/
                modelIds.add(model.getPluginBase().getId());
                }</code>
        </source_code>
        <source_code type="ifstatement">
            <location start="5040" end="5242"/>
            <code>if (isJavaProject) {
                IJavaProject jProject = JavaCore.create(project);
                jProject.setRawClasspath(new IClasspathEntry[0], project.getFullPath(),
                monitor);
                modelIds.add(model.getPluginBase().getId());
                }</code>
        </source_code>
        <source_code type="ifstatement">
            <location start="6021" end="6223"/>
            <code>if (isJavaProject) {
                IJavaProject jProject = JavaCore.create(project);
                jProject.setRawClasspath(new IClasspathEntry[0], project.getFullPath(),
                monitor);
                modelIds.add(model.getPluginBase().getId());
                }</code>
        </source_code>
        <source_code type="class">
            <location start="8212" end="8232"/>
            <code>public class Main {</code>
        </source_code>
        <source_code type="functiondef">
            <location start="8233" end="8278"/>
            <code>-    public static void main(String[] args) {</code>
        </source_code>
        <source_code type="functiondef">
            <location start="8279" end="8325"/>
            <code>+    public static void start(String[] args) {</code>
        </source_code>
        <source_code type="assignment">
            <location start="8326" end="8341"/>
            <code>int num1 = 10;</code>
        </source_code>
        <source_code type="assignment">
            <location start="8342" end="8357"/>
            <code>int num2 = 20;</code>
        </source_code>
        <source_code type="assignment">
            <location start="8358" end="8381"/>
            <code>int sum = num1 + num2;</code>
        </source_code>
    </SourceCodeRegions>
    <Enumerations amount="3">
        <Enumeration lines="2">
            <Lines>
                <Line>1. If autobuilding is on, we turn it off.</Line>
                <Line>2. We import all the plug-ins selected in the import wizard and create a Java</Line>
            </Lines>
        </Enumeration>
        <Enumeration lines="2">
            <Lines>
                <Line>1) perform the import in only one operation as suggested by bug 31592</Line>
                <Line>2) add a temporary .classpth to the project to avoid markers creation while</Line>
            </Lines>
        </Enumeration>
        <Enumeration lines="3">
            <Lines>
                <Line>- About markers displayed between step 2 and step 3 there's nothing to do on our</Line>
                <Line>- At the end of step 2, a PRE_AUTO_BUILD event is sent by the</Line>
                <Line>- As project were created in step 2 without classpath, then we correctly create a</Line>
            </Lines>
        </Enumeration>
    </Enumerations>
</infozilla-output>
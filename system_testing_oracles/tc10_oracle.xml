<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Patches amount="2">
    <Patch>
      <index>file_modificato.txt</index>
      <original_file>file_modificato.txt</original_file>
      <modified_file>file_modificato.txt</modified_file>
      <Hunks>
        <hunk />
        <hunk />
      </Hunks>
    </Patch>
    <Patch>
      <index>main.java</index>
      <original_file>main.java	(revision 123)</original_file>
      <modified_file>main.java	(revision 124)</modified_file>
      <Hunks>
        <hunk />
      </Hunks>
    </Patch>
  </Patches>
  <Stacktraces amount="2">
    <Stacktrace timestamp="1692713384315">
      <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
      <Reason>:
        Resource /org.eclipse.debug.core/.classpath is not local.</Reason>
      <Frames>
        <Frame depth="0">org.eclipse.core.internal.resources.Resource.checkLocal(Resource.java:313)</Frame>
        <Frame depth="1">org.eclipse.core.internal.resources.File.getContents(File.java:213)</Frame>
        <Frame depth="2">org.eclipse.jdt.internal.core.Util.getResourceContentsAsByteArray(Util.java:671)</Frame>
        <Frame depth="3">org.eclipse.jdt.internal.core.JavaProject.getSharedProperty(JavaProject.java:1793)</Frame>
        <Frame depth="4">org.eclipse.jdt.internal.core.JavaProject.readClasspathFile(JavaProject.java:2089)</Frame>
        <Frame depth="5">org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:1579)</Frame>
        <Frame depth="6">org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.execute(IndexAllProject.java:77)</Frame>
        <Frame depth="7">org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:371)</Frame>
      </Frames>
    </Stacktrace>
    <Stacktrace timestamp="1692713384315">
      <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
      <Reason>:
        Resource /org.eclipse.jdt.launching/.classpath is not local.</Reason>
      <Frames>
        <Frame depth="0">org.eclipse.core.internal.resources.Resource.checkLocal(Resource.java:307)</Frame>
        <Frame depth="1">org.eclipse.core.internal.resources.File.getContents(File.java:213)</Frame>
        <Frame depth="2">org.eclipse.jdt.internal.core.Util.getResourceContentsAsByteArray(Util.java:677)</Frame>
        <Frame depth="3">org.eclipse.jdt.internal.core.JavaProject.getSharedProperty(JavaProject.java:1809)</Frame>
        <Frame depth="4">org.eclipse.jdt.internal.core.JavaProject.readClasspathFile(JavaProject.java:2105)</Frame>
        <Frame depth="5">org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:1593)</Frame>
        <Frame depth="6">org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:1583)</Frame>
        <Frame depth="7">org.eclipse.jdt.internal.core.JavaProject.getOutputLocation(JavaProject.java:1375)</Frame>
        <Frame depth="8">org.eclipse.jdt.internal.core.search.indexing.IndexAllProject.execute(IndexAllProject.java:90)</Frame>
        <Frame depth="9">org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:375)</Frame>
        <Frame depth="10">java.lang.Thread.run(Thread.java:536)</Frame>
      </Frames>
    </Stacktrace>
  </Stacktraces>
  <SourceCodeRegions amount="0" />
  <Enumerations amount="3">
    <Enumeration lines="2">
      <Lines>
        <Line>1. If autobuilding is on, we turn it off.</Line>
        <Line>2. We import all the plug-ins selected in the import wizard and create a Java</Line>
      </Lines>
    </Enumeration>
    <Enumeration lines="2">
      <Lines>
        <Line>1) perform the import in only one operation as suggested by bug 31592</Line>
        <Line>2) add a temporary .classpth to the project to avoid markers creation while</Line>
      </Lines>
    </Enumeration>
    <Enumeration lines="3">
      <Lines>
        <Line>- About markers displayed between step 2 and step 3 there's nothing to do on our</Line>
        <Line>- At the end of step 2, a PRE_AUTO_BUILD event is sent by the</Line>
        <Line>- As project were created in step 2 without classpath, then we correctly create a</Line>
      </Lines>
    </Enumeration>
  </Enumerations>
</infozilla-output>


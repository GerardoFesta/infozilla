<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
    <Patches amount="2">
        <Patch>
            <index>file_modificato.txt</index>
            <original_file>file_modificato.txt</original_file>
            <modified_file>file_modificato.txt</modified_file>
            <Hunks>
                <hunk />
                <hunk />
            </Hunks>
        </Patch>
        <Patch>
            <index>main.java</index>
            <original_file>main.java</original_file>
            <modified_file>main.java</modified_file>
            <Hunks>
                <hunk />
            </Hunks>
        </Patch>
    </Patches>
    <Stacktraces amount="0"/>
    <SourceCodeRegions amount="4">
        <source_code type="functioncall">
            <location start="3438" end="3451" />
            <code>(monitor,1));</code>
        </source_code>
        <source_code type="ifstatement">
            <location start="6038" end="6306" />
            <code>if (isJavaProject) {
                /*IJavaProject jProject = JavaCore.create(project);
                if (jProject.getRawClasspath() != null
                &amp;&amp; jProject.getRawClasspath().length &gt; 0)
                jProject.setRawClasspath(new IClasspathEntry[0], monitor);*/
                modelIds.add(model.getPluginBase().getId());
                }</code>
        </source_code>
        <source_code type="ifstatement">
            <location start="6314" end="6516" />
            <code>if (isJavaProject) {
                IJavaProject jProject = JavaCore.create(project);
                jProject.setRawClasspath(new IClasspathEntry[0], project.getFullPath(),
                monitor);
                modelIds.add(model.getPluginBase().getId());
                }</code>
        </source_code>
        <source_code type="ifstatement">
            <location start="7460" end="7662" />
            <code>if (isJavaProject) {
                IJavaProject jProject = JavaCore.create(project);
                jProject.setRawClasspath(new IClasspathEntry[0], project.getFullPath(),
                monitor);
                modelIds.add(model.getPluginBase().getId());
                }</code>
        </source_code>
    </SourceCodeRegions>
    <Enumerations amount="3">
        <Enumeration lines="2">
            <Lines>
                <Line>1. If autobuilding is on, we turn it off.</Line>
                <Line>2. We import all the plug-ins selected in the import wizard and create a Java</Line>
            </Lines>
        </Enumeration>
        <Enumeration lines="2">
            <Lines>
                <Line>1) perform the import in only one operation as suggested by bug 31592</Line>
                <Line>2) add a temporary .classpth to the project to avoid markers creation while</Line>
            </Lines>
        </Enumeration>
        <Enumeration lines="3">
            <Lines>
                <Line>- About markers displayed between step 2 and step 3 there's nothing to do on our</Line>
                <Line>- At the end of step 2, a PRE_AUTO_BUILD event is sent by the</Line>
                <Line>- As project were created in step 2 without classpath, then we correctly create a</Line>
            </Lines>
        </Enumeration>
    </Enumerations>
</infozilla-output>

